apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-thanos-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s

    remote_write:
      - url: http://thanos-routing-receiver.monitoring.svc:19291/api/v1/receive
        headers:
          THANOS-TENANT: plat

    scrape_configs:
    - job_name: 'kubelet'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

    - job_name: 'cadvisor'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_namespace]
        regex: (default|kube-system)
        action: drop
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

    - job_name: 'pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        regex: metrics
        action: keep
      - source_labels: [__meta_kubernetes_namespace]
        regex: (default|kube-system)
        action: drop
      - source_labels: [__meta_kubernetes_pod_container_name]
        target_label: job

    - job_name: 'kube-state-metrics' # EKS Addonで入れると`kube-state-metrics` namespaceにデプロイされる
      static_configs:
      - targets: ['kube-state-metrics.kube-state-metrics.svc.cluster.local:8080']

    - job_name: 'node-exporter'
      kubernetes_sd_configs:
        - role: node
      relabel_configs:
        - source_labels: [__meta_kubernetes_node_name]
          target_label: instance
        - source_labels: [__address__]
          regex: '(.*):10250'
          replacement: '${1}:9100'
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)

    - job_name: 'thanos-ingesting-receiver'
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: monitoring
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: thanos-ingesting-receiver
          action: keep
        - source_labels: [__meta_kubernetes_pod_ip]
          target_label: __address__
          replacement: ${1}:10902
      metric_relabel_configs:
        - target_label: component
          replacement: ingesting-receiver

    - job_name: 'thanos-routing-receiver'
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: monitoring
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: thanos-routing-receiver
          action: keep
        - source_labels: [__meta_kubernetes_pod_ip]
          target_label: __address__
          replacement: ${1}:10902
      metric_relabel_configs:
        - target_label: component
          replacement: routing-receiver

    - job_name: 'thanos-querier'
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: monitoring
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: thanos-query
          action: keep
        - source_labels: [__meta_kubernetes_pod_ip]
          target_label: __address__
          replacement: ${1}:10902
      metric_relabel_configs:
        - target_label: component
          replacement: querier

    - job_name: 'thanos-query-frontend'
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: monitoring
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: thanos-query-frontend
          action: keep
        - source_labels: [__meta_kubernetes_pod_ip]
          target_label: __address__
          replacement: ${1}:10902
      metric_relabel_configs:
        - target_label: component
          replacement: query-frontend

    - job_name: 'thanos-store'
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: monitoring
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: thanos-store
          action: keep
        - source_labels: [__meta_kubernetes_pod_ip]
          target_label: __address__
          replacement: ${1}:10902
      metric_relabel_configs:
        - target_label: component
          replacement: store

    - job_name: 'thanos-compactor'
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: monitoring
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: thanos-compactor
          action: keep
        - source_labels: [__meta_kubernetes_pod_ip]
          target_label: __address__
          replacement: ${1}:10902
      metric_relabel_configs:
        - target_label: component
          replacement: compactor

    - job_name: 'multi-tenant-loki'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_name]
        regex: ^multi-tenant-loki-.+
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_ip]
        regex: (.+)
        target_label: __address__
        replacement: ${1}:3100

    - job_name: 'multi-tenant-tempo'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_name]
        regex: ^multi-tenant-tempo-.+
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_ip]
        regex: (.+)
        target_label: __address__
        replacement: ${1}:3100

    - job_name: 'platform-team-grafana'
      static_configs:
      - targets: ['grafana.monitoring.svc.cluster.local:3000']

    - job_name: 'flux'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace]
        regex: flux-system
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_ip]
        regex: (.+)
        target_label: __address__
        replacement: ${1}:8080

    - job_name: 'argocd-application-controller'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace]
        regex: argocd
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        regex: argocd-application-controller.*
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_ip]
        regex: (.+)
        target_label: __address__
        replacement: ${1}:8082

    - job_name: 'argocd-applicationset-controller'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace]
        regex: argocd
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        regex: argocd-applicationset-controller.*
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_ip]
        regex: (.+)
        target_label: __address__
        replacement: ${1}:8080

    - job_name: 'argocd-server'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace]
        regex: argocd
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        regex: argocd-server.*
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_ip]
        regex: (.+)
        target_label: __address__
        replacement: ${1}:8083

    - job_name: 'argocd-repo-server'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace]
        regex: argocd
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        regex: argocd-repo-server.*
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_ip]
        regex: (.+)
        target_label: __address__
        replacement: ${1}:8084

    - job_name: 'alloy'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace]
        regex: monitoring
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        regex: .*alloy-.*
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_ip]
        regex: (.+)
        target_label: __address__
        replacement: ${1}:12345

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-thanos
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-thanos
  template:
    metadata:
      labels:
        app: prometheus-thanos
        revision: 20250624-01
    spec:
      nodeSelector:
        karpenter.sh/nodepool: arm64-nodepool
        karpenter.sh/capacity-type: on-demand
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v3.2.1
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=2h
        - --web.enable-lifecycle
        - --web.enable-admin-api
        - --web.enable-otlp-receiver
        ports:
        - name: http
          containerPort: 9090
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: data
          mountPath: /prometheus
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
      volumes:
      - name: config
        configMap:
          name: prometheus-thanos-config
      - name: data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-thanos
  namespace: monitoring
spec:
  type: NodePort
  selector:
    app: prometheus-thanos
  ports:
  - name: http
    port: 9090
    targetPort: http
    nodePort: 31000