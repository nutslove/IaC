---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: monitoring
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector:0.104.0
        args:
          - "--config=/conf/otel-collector-config.yaml"
        volumeMounts:
          - name: otel-collector-config-vol
            mountPath: /conf
      volumes:
        - name: otel-collector-config-vol
          configMap:
            name: otel-collector-conf
---
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  ports:
  - name: otlp-grpc
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: otlp-http
    port: 4318
    protocol: TCP
    targetPort: 4318
  selector:
    app: opentelemetry
    component: otel-collector
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: monitoring
  name: otel-collector-conf
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config.yaml: |
    extensions:
      health_check:
      pprof:
        endpoint: 0.0.0.0:1777
      zpages:
        endpoint: 0.0.0.0:55679

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 30s
            static_configs:
            - targets: ['localhost:8888']
          - job_name: 'node-exporter'
            scrape_interval: 30s
            static_configs:
            - targets: ['localhost:9100']
          - job_name: 'process-exporter'
            scrape_interval: 30s
            static_configs:
            - targets: ['localhost:9256']
          - job_name: 'kubelet'
            kubernetes_sd_configs:
            - role: node
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            relabel_configs:
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$$1/proxy/metrics
          - job_name: 'cadvisor'
            kubernetes_sd_configs:
            - role: node
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            relabel_configs:
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            # - source_labels: [__meta_kubernetes_namespace]
            #   regex: (default|kube-system)
            #   action: drop
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$$1/proxy/metrics/cadvisor
          - job_name: 'pods'
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:
            - source_labels: [__meta_kubernetes_pod_container_port_name]
              regex: metrics
              action: keep
            - source_labels: [__meta_kubernetes_namespace]
              regex: (default|kube-system)
              action: drop
            - source_labels: [__meta_kubernetes_pod_container_name]
              target_label: job
          - job_name: 'kube-state-metrics'
            static_configs:
            - targets: ['kube-state-metrics.monitoring.svc.cluster.local:8080']

    processors:
      batch:

    exporters:
      logging:
        verbosity: detailed
      # otlp:
      #   #### Jaeger
      #   #endpoint: http://10.111.2.4:4317
      #   #tls:
      #     #insecure: true
      prometheusremotewrite:
        endpoint: "http://thanos-routing-receiver.monitoring.svc.cluster.local:19291/api/v1/receive"
        headers:
          THANOS-TENANT: home-labs 
        tls:
          insecure: true
        external_labels:
          system: otel_demo

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          # exporters: [otlp, logging]
          exporters: [logging]

        metrics:
          receivers: [otlp, prometheus]
          processors: [batch]
          # exporters: [otlp, prometheusremotewrite, logging]
          exporters: [prometheusremotewrite, logging]

        logs:
          receivers: [otlp]
          processors: [batch]
          # exporters: [otlp, logging]
          exporters: [logging]
      extensions: [health_check, pprof, zpages]