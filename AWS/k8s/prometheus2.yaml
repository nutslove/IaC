apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus2-config
  namespace: metrics
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    remote_write:
      - url: http://thanos-routing-receiver.metrics.svc:19291/api/v1/receive
        headers:
          THANOS-TENANT: lee

    scrape_configs:
    - job_name: 'prometheus'
        # metrics_path defaults to '/metrics'
        # scheme defaults to 'http'.
      static_configs:
      - targets: ['localhost:9090']

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus2
  namespace: metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus2
  template:
    metadata:
      labels:
        app: prometheus2
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus2
        image: prom/prometheus:v2.45.0
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=2h
        - --web.enable-lifecycle
        - --web.enable-admin-api
        ports:
        - name: http
          containerPort: 9090
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: data
          mountPath: /prometheus
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
      volumes:
      - name: config
        configMap:
          name: prometheus2-config
      - name: data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus2
  namespace: metrics
spec:
  type: NodePort
  selector:
    app: prometheus2
  ports:
  - name: http
    port: 9090
    targetPort: http
    nodePort: 30001